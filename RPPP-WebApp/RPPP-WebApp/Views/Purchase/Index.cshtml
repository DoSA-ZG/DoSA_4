@model IEnumerable<RPPP_WebApp.Model.Purchase>

@{
    ViewData["Title"] = "Index";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    int startingRecordNumber = (currentPage - 1) * 3 + 1;
}

<h1>Purchases</h1>

<p>
    <a class="btn btn-primary text-white" asp-action="Create">Add New</a>
</p>
<table class="table">
    <thead class="bg-light">
        <tr>
            <th>#</th>
            <th>
                @Html.DisplayNameFor(model => model.CollectedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gain)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tag)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Harvest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>@(startingRecordNumber++)</td>
            <td>
                @Html.DisplayFor(modelItem => item.CollectedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gain)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tag)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Harvest.IdHarvest)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Order.Description)
            </td>
            <td>
                    <a asp-action="Details" class="btn btn-success" asp-route-id="@item.IdPurchase">Details</a>
                    <a asp-action="Edit" class="btn btn-warning text-white" asp-route-id="@item.IdPurchase">Edit</a>
                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.IdPurchase">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<nav class="fixed-bottom m-5">
    <ul class="pagination justify-content-end">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                @Html.ActionLink(i.ToString(), "Index", new { page = i }, new { @class = "page-link" })
            </li>
        }
        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>

